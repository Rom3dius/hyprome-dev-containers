name: build-boxkit

on:
  workflow_dispatch:
  push:
    tags:
      - "v*" # run only on version tags like  v1.3.0

# ───────────────────────── global env ─────────────────────────
env:
  REGISTRY: ghcr.io

jobs:
  build-push:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        include:
          # ── add more blocks here ───────────────────────────────────────
          - containerfile: dev
            imagename: hyprome-dev-container # ghcr.io/<ns>/hyprome-dev-container
          # - containerfile: anotherfile
          #   imagename: hyprome-foo-container
          # ----------------------------------------------------------------

    steps:
      # ───────────────────────── checkout ─────────────────────────
      - uses: actions/checkout@v4

      # ───────── derive lowercase owner & version from tag ────────
      - name: Prepare vars
        id: vars
        run: |
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          VERSION="${GITHUB_REF#refs/tags/}"
          VERSION="${VERSION#v}"
          echo "owner=${OWNER_LC}"        >> $GITHUB_OUTPUT
          echo "version=${VERSION}"       >> $GITHUB_OUTPUT
          echo "tags=${VERSION},latest"   >> $GITHUB_OUTPUT

      # ──────────────────── build metadata labels ─────────────────
      - name: Image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ steps.vars.outputs.owner }}/${{ matrix.imagename }}
          tags: |
            type=raw,value=${{ steps.vars.outputs.version }}
            type=raw,value=latest
          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/ublue-os/boxkit/main/README.md

      # ─────────────────── build with Buildah ────────────────────
      - name: Build image
        id: build
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./ContainerFiles/${{ matrix.containerfile }}
          build-args: |
            DOTFILES_REPO=https://github.com/<you>/dotfiles.git   # or secret‑inject
          image: ${{ env.REGISTRY }}/${{ steps.vars.outputs.owner }}/${{ matrix.imagename }}
          tags: ${{ steps.vars.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          oci: true

      # ───────────────── login & push to GHCR ─────────────────────
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to GHCR
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build.outputs.image }}
          tags: ${{ steps.build.outputs.tags }}
          registry: ${{ env.REGISTRY }}/${{ steps.vars.outputs.owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ───────────────────── sign with cosign ─────────────────────
      - uses: sigstore/cosign-installer@v3.8.2

      - name: Sign image
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY \
            ${{ env.REGISTRY }}/${{ steps.vars.outputs.owner }}/${{ matrix.imagename }}@${{ steps.push-to-registry.outputs.digest }}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
